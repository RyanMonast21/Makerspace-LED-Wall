#include <WiFi.h>           //  FOR API GRAB
#include <HTTPClient.h>     //  FOR API GRAB
#include <ArduinoJson.h>    //  FOR API GRAB

#include <FS.h>             //  FOR SD CARD
#include <SD.h>             //  FOR SD CARD
#include <SPI.h>            //  FOR SD CARD

#include <NTPClient.h>      //  FOR DATE COMPUTATION
#include <WiFiUdp.h>        //  FOR DATE COMPUTATION

// Wi-Fi Credentials
const char* WiFiSSID = "WiFi Name";       // Replace with your WiFi name
const char* WiFiPassword = "WiFi Password"; // Replace with your WiFi password

// OpenWeatherMap API Key and City
const char* apiKey = "OpenWeatherMap API Key";  //  OpenWeatherMap API Key
const char* city = "City Selection";        // City Selection
const char* countryCode = "Country Selection";       // Country Selection

// Connect to the NTP Server for date and time
const char* ntpServer = "pool.ntp.org";
const long  gmtOffset_sec = -5 * 3600;  // EST (UTC -5)
const int   daylightOffset_sec = 3600;  // Add 1 hour for DST (EDT)

#define SDCardCsPin = 5  // Set the SD Card pin to G5 on the ESP32

// API URL
String apiURL = "http://api.openweathermap.org/data/2.5/weather?q=" + 
                String(city) + "," + String(countryCode) + 
                "&appid=" + String(apiKey) + "&units=imperial";

void setup() {
    Serial.begin(115200);  // Toggle on for Serial Monitor Data (All)
    WiFi.begin(WiFiSSID, WiFiPassword);

    // Serial.print("Connecting to Wi-Fi"); // Toggle on for Serial Monitor Data (Wi-Fi Collection)
    // while (WiFi.status() != WL_CONNECTED){
        // delay(500);
        // Serial.println("\nConnected to Wi-Fi!"); // Toggle on for Serial Monitor Data (Wi-Fi Collection)
    // }

    // Configure time
    configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
}

void loop() {
  apiGrab();
  dateCalibration();
  conditionLogic();

  delay(3000000);
}


void apiGrab(){
    //IF WI-FI IS SUCCESSFULLY CONNECTED
    if (WiFi.status() == WL_CONNECTED){
        HTTPClient http;
        http.begin(apiURL);
        int httpResponseCode = http.GET();

        //IF THE JSON REQUEST IS SUCCESSFUL
        if (httpResponseCode > 0){
            String JSONpayload = http.getString();  // Read response

            //PARSES JSON DATA
            DynamicJsonDocument JSONDocument(1024);
            DeserializationError error = deserializeJson(JSONDocument, JSONpayload);

            //IF THE JSON DATA IS SUCCESSFULLY PARSED WITHOUT ERROR
            if (!error){
                String weatherCondition = JSONDocument["weather"][0]["main"];  //Condition
                String weatherDescription = JSONDocument["weather"][0]["description"];    //Description
                float temperature = JSONDocument["main"]["temp"];  //Temperature

                // Print parsed weather data ***DEBUGGING PURPOSES ONLY***
                // Serial.println("----------- WEATHER INFO -----------");
                // Serial.println("City: " + String(city));
                // Serial.println("Condition: " + weatherCondition);
                // Serial.println("Description: " + weatherDescription);
                // Serial.print("Temperature: ");
                // Serial.print(temperature);
                // Serial.println(" Â°F");
                // Serial.println("-----------------------------------");
            } 
            else{
                // Serial.println("JSON Parsing Failed!");
              }
        } 
        //IF HTTP REQUEST FAILS
        else{
            // Serial.print("Error on HTTP request: ");
            // Serial.println(httpResponseCode);
        }
        http.end();  // Close HTTP Connection
    } 
    //IF WI-FI CONNECTION CANNOT BE PROPERLY OBTAINED RETRY
    else{
        // Serial.println("Wi-Fi Disconnected. Reconnecting...");
        WiFi.begin(WiFiSSID, WiFiPassword);
    }
}

void dateCalibration(){
  struct tm timeInfo;
  if (!getLocalTime(&timeInfo)) {
      //Serial.println("Failed to obtain time");
      return;
  }

  int currentMonth = timeInfo.tm_mon + 1;  // Month counter begins at zero, so we add one to make January the first month and December the 12th.
  //Serial.print("Current Month: ");
  //Serial.println(currentMonth);
  
  int currentDay = timeInfo.tm_mday;
  //Serial.print("Current Date: ");
  //Serial.println(currentDay);
  
  int currentSeason = 0;

  if (currentMonth == 1 || 2 || 12) {
    currentSeason = 1;
  }
  else if (currentMonth == 3 || 4 || 5) {
    currentSeason = 2;
  }
  else if (currentMonth == 6 || 7 || 8) {
    currentSeason = 3;
  }
  else{
    currentSeason = 4;
  }
  //Serial.println(currentSeason);
}

void conditionLogic(){
  if (curentSeason == 1) {  // If it is winter
    if (temperature <= 80){  //If it is more than or equal to 80 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{

      }
    }
    else if (temperature > 80 && < 32){  //If it is less than 80 degrees but more than 32 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
    else{  //If it is less than or equal to 32 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
  }
  else if (curentSeason == 2) {  // If it is spring
    if (temperature <= 80){  //If it is more than or equal to  80 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
    else if (temperature > 80 && < 32){  //If it is less than 80 degrees but more than 32 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
    else{  //If it is less than or equal to 32 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
  }
  else if (curentSeason == 3) {  // If it is summer
    if (temperature <= 80){  //If it is more than or equal to 80 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
    else if (temperature > 80 && < 32){  //If it is less than 80 degrees but more than 32 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
    else{  //If it is less than or equal to 32 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
  }
  else{  // If it is fall
    if (temperature <= 80){  //If it is more than or equal to  80 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
    else if (temperature > 80 && < 32){  //If it is less than 80 degrees but more than 32 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
    else{  //If it is less than or equal to 32 degrees
      if (weatherCondition == "Clear") {

      }
      else if (weatherCondition == "Clouds" || "Tornado" || "Squall" || "Ash" || "Dust" || "Sand" || "Fog" || "Dust" || "Haze" || "Smoke" || "Mist") {

      }
      else if (weatherCondition == "Snow") {

      }
      else if (weatherCondition == "Drizzle" || "Rain"){

      }
      else{
        
      }
    }
  }
}
